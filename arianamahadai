#include <stdio.h>

int main() {
    int arr[] = {97, 16, 45, 63, 13, 22, 7, 58, 72};
    int n = sizeof(arr) / sizeof(arr[0]);
    int i, j, temp, swaps;

    printf("Original array:\n");
    for (i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    // loop through the array n-1 times (each pass)
    for (i = 0; i < n-1; i++) {
        swaps = 0; // reset swaps counter for each pass
        // loop through the array up to n-i-1 (exclude sorted elements at end)
        for (j = 0; j < n-i-1; j++) {
            // if adjacent elements are out of order, swap them and increment swaps counter
            if (arr[j] > arr[j+1]) {
                temp = arr[j];
                arr[j] = arr[j+1];
                arr[j+1] = temp;
                swaps++;
            }
        }
        // print the number of swaps in each pass
        printf("Pass #%d: %d\n", i+1, swaps);
        if (swaps == 0) {
            // if there are no swaps in a pass, the array is already sorted
            // terminate early to save time
            break;
        }
    }

    // print the sorted array
    printf("Sorted array:\n");
    for (i = 0; i < n; i++) {
        printf("%d ", arr[i]);
    }
    printf("\n");

    return 0;
}
